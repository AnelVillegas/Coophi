{"version":3,"sources":["components/Navegation.js","components/Elements.js","components/SideSection.js","components/Content.js","App.js","reducers/elementReducer.js","index.js"],"names":["Navegation","className","bg","expand","variant","Component","Elements","this","props","post","name","description","SideSection","elements","map","element","key","id","connect","state","Content","handleSubmit","e","prevetDefault","data","getName","value","getDescription","dispatch","type","Form","onSubmit","Label","Control","ref","input","as","rows","App","elementReducer","action","concat","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"6RAgBmBA,E,iLAVb,OACE,kBAAC,IAAD,CAAQC,UAAW,SAAUC,GAAG,QAAQC,OAAO,KAAKC,QAAQ,SAA5D,S,GAHiBC,a,QCQVC,E,iLARb,OACE,6BACE,4BAAKC,KAAKC,MAAMC,KAAKC,MACrB,2BAAIH,KAAKC,MAAMC,KAAKE,kB,GALHN,aCGjBO,E,iLAGA,OACE,yBAAKX,UAAW,QACd,yBAAKA,UAAU,OAAf,aACHM,KAAKC,MAAMK,SAASC,IAAI,SAACC,GAAD,OAAa,kBAAC,EAAD,CAAUC,IAAKD,EAAQE,GAAIF,QAASA,MAExE,4BAAQE,GAAI,MAAMhB,UAAW,UAA7B,iB,GARkBI,aAsBPa,cANS,SAACC,GACrB,MAAO,CACHN,SAAUM,IAIHD,CAAyBN,G,QCtBtCQ,E,2MACNC,aAAe,SAACC,GACZA,EAAEC,gBACF,IAEMC,EAAO,CACTP,GAHS,EAAKQ,QAAQC,MAItBf,YAHgB,EAAKgB,eAAeD,OAMxC,EAAKlB,MAAMoB,SAAS,CAChBC,KAAK,cACLL,SACA,EAAKC,QAAQC,MAAO,GACpB,EAAKC,eAAeD,MAAQ,I,wEAKtB,IAAD,OACP,OACE,kBAAC,WAAD,KACI,sEACA,kBAACI,EAAA,EAAD,CAAM7B,UAAU,OAAO8B,SAAUxB,KAAKc,cAClC,kBAACS,EAAA,EAAKE,MAAN,eACA,kBAACF,EAAA,EAAKG,QAAN,CAAcJ,KAAK,OAAOK,IAAK,SAACC,GAAD,OAAS,EAAKV,QAAUU,KACvD,kBAACL,EAAA,EAAKE,MAAN,uBACA,kBAACF,EAAA,EAAKG,QAAN,CAAcG,GAAG,WAAWC,KAAK,IAAIH,IAAK,SAACC,GAAD,OAAS,EAAKR,eAAiBQ,KACzE,4BAAQlC,UAAU,aAAlB,UAIP,6BACI,4BAAQA,UAAU,aAAlB,kB,GAjCSI,aA2CHa,gBAAUE,GCvBdkB,G,uLAfb,OACE,kBAAC,WAAD,KACE,6BACA,kBAAC,EAAD,OAGA,yBAAKrC,UAAU,aAAY,kBAAC,EAAD,MAA3B,KACA,yBAAKA,UAAU,cAAa,kBAAC,EAAD,Y,GAXhBI,c,QCKHkC,EAVQ,WAA0B,IAAzBpB,EAAwB,uDAAhB,GAAKqB,EAAW,uCAC5C,OAAQA,EAAOX,MACX,IAAK,cACD,OAAOV,EAAMsB,OAAO,CAACD,EAAOhB,OAChC,QACI,OAAOL,ICEbuB,EAAQC,YAAaJ,GAE3BK,IAASC,OAAO,kBAAC,IAAD,CAAUH,MAAOA,GAAO,kBAAC,EAAD,OAAoBI,SAASC,eAAe,W","file":"static/js/main.f985556b.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\n\r\n\r\nclass Navegation extends Component {\r\n    render() {\r\n      return(\r\n        <Navbar className =\"navbar\"  bg=\"light\" expand=\"lg\" variant=\"light\"> \r\n          X          \r\n        </Navbar>\r\n            \r\n    );\r\n    \r\n    }\r\n    }\r\n    \r\n    export default Navegation;","import React, { Component } from 'react';\r\n\r\nclass Elements extends Component {\r\n  render() {\r\n  return (\r\n    <div>\r\n      <h2>{this.props.post.name}</h2>\r\n      <p>{this.props.post.description}</p>\r\n    </div>\r\n  );\r\n }\r\n}\r\nexport default Elements;","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport Elements from './Elements';\r\n\r\n\r\nclass SideSection extends Component {\r\n    render() {\r\n         \r\n      return(\r\n        <div className= \"side\" >\r\n          <div className=\"new\">Elementos</div>\r\n      {this.props.elements.map((element) => <Elements key={element.id} element={element}/>)}\r\n\r\n        <button id= \"add\" className= \"btnAdd\">Agregar </button>\r\n       \r\n      </div>\r\n    );\r\n    \r\n    }\r\n}\r\n\r\n    const mapStateToProps = (state) => {\r\n        return {\r\n            elements: state\r\n        }\r\n    }\r\n    \r\n    export default connect(mapStateToProps)(SideSection);","import React, {Component, Fragment} from 'react';\r\nimport {Form} from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nclass Content extends Component {\r\nhandleSubmit = (e) => {\r\n    e.prevetDefault();\r\n    const name = this.getName.value;\r\n    const description = this.getDescription.value;\r\n    const data = {\r\n        id: name,\r\n        description\r\n    }\r\n    \r\n    this.props.dispatch({\r\n        type:'ADD_ELEMENT',\r\n        data});\r\n        this.getName.value ='';\r\n        this.getDescription.value = '';\r\n    };\r\n\r\n\r\n\r\n    render() {\r\n      return(\r\n        <Fragment> \r\n            <div> Estás agregando un nuevo elemento</div>\r\n            <Form className=\"form\" onSubmit={this.handleSubmit}>\r\n                <Form.Label>Nombre</Form.Label>\r\n                <Form.Control type=\"text\" ref={(input)=>this.getName = input}/>\r\n                <Form.Label>Descripción</Form.Label>\r\n                <Form.Control as=\"textarea\" rows=\"3\" ref={(input)=>this.getDescription = input} />\r\n                <button className=\"btnCreate\">Crear</button>\r\n            </Form>\r\n       \r\n       \r\n         <div> \r\n             <button className=\"btnCancel\">Cancelar</button>\r\n             \r\n         </div>\r\n         </Fragment>\r\n\r\n    );\r\n    \r\n    }\r\n}\r\n    \r\n    export default connect()(Content);","import React, {Component, Fragment} from 'react';\nimport Navegation from './components/Navegation';\nimport SideSection from './components/SideSection';\nimport Content from './components/Content';\nimport './App.css';\n\nclass App extends Component { \n  render() {\n\n  \n  return (\n    <Fragment>\n      <div>\n      <Navegation/>\n      </div>\n      \n      <div className=\"rectangle\"><SideSection/> </div>\n      <div className=\"rectangle2\"><Content/></div>\n      </Fragment>\n     \n    \n  )\n  }\n}\n\nexport default App;\n","\r\nconst elementReducer = (state = [] , action) => {\r\n    switch (action.type){\r\n        case 'ADD_ELEMENT':\r\n            return state.concat([action.data]);\r\n        default:\r\n            return state;\r\n    }\r\n    \r\n}\r\n\r\nexport default elementReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {createStore} from 'redux';\nimport {Provider} from 'react-redux';\nimport elementReducer from './reducers/elementReducer';\n\nconst store = createStore (elementReducer);\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n"],"sourceRoot":""}